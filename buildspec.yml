#version: 0.2
#
#
#
#phases:
#  install:
#    runtime-versions:
#      java: corretto8
#    commands:
#      - echo install
#  pre_build:
#    commands:
#      - echo pre_build
#  build:
#    commands:
#      - mvn clean install
#      - echo build
#  post_build:
#    commands:
#      - echo post_build
#artifacts:
#  files:
#    - target/eureka.jar
#  discard-paths: yes
version: 0.2
phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - printf '123Raphael)(*' > my_password.txt
      - cat my_password.txt | docker login --username klashaapps --password-stdin
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin 696217532920.dkr.ecr.us-east-1.amazonaws.com/audit
      - REPOSITORY_URI=696217532920.dkr.ecr.us-east-1.amazonaws.com/audit
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
  build:
    commands:
      - echo Build started on `date`
      - echo building the Jar file
      - mvn clean install
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"audit-container","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - cat imagedefinitions.json
artifacts:
  files: imagedefinitions.json